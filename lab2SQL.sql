CREATE DATABASE  flower; 

CREATE TABLE flower.user (
user_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
username VARCHAR(39) NOT NULL,
email VARCHAR(60)NOT NULL,
password VARCHAR(60)NOT NULL,
phone VARCHAR (20)NOT NULL,
active BIT(1)NOT NULL,
role VARCHAR(20)NOT NULL,
PRIMARY KEY (user_id) 
); 

CREATE TABLE flower.type (
type_id INT UNSIGNED NOT NULL AUTO_INCREMENT, 
color VARCHAR(30),
PRIMARY KEY (type_id)); 

CREATE TABLE flower.product(
product_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
name VARCHAR(99) NOT NULL,
photo VARCHAR(64) NOT NULL,
description VARCHAR(255) NOT NULL,
price INT(11)NOT NULL,
quantity INT(11)NOT NULL,
type_id INT UNSIGNED NOT NULL,
PRIMARY KEY (product_id),
CONSTRAINT product_type FOREIGN KEY (type_id) 
REFERENCES flower.type (type_id) ON DELETE NO ACTION ON
UPDATE NO ACTION); 



CREATE TABLE flower.like_list (
like_list_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INT UNSIGNED NOT NULL,
product_id INT UNSIGNED NOT NULL,
PRIMARY KEY (like_list_id),
CONSTRAINT like_list_user FOREIGN KEY (user_id)
REFERENCES flower.USER(user_id) ON DELETE CASCADE ON 
UPDATE CASCADE, 
CONSTRAINT like_list_product FOREIGN KEY (product_id) 
REFERENCES flower.PRODUCT (product_id) ON DELETE CASCADE ON
UPDATE CASCADE
); 


CREATE TABLE flower.cart (
cart_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INT UNSIGNED NOT NULL,
product_id INT UNSIGNED NOT NULL,
quantity INT(11),
date DATETIME,
PRIMARY KEY (cart_id),
CONSTRAINT cart_user FOREIGN KEY (user_id)
REFERENCES flower.USER(user_id) ON DELETE CASCADE ON 
UPDATE CASCADE, 
CONSTRAINT cart_product FOREIGN KEY (product_id) 
REFERENCES flower.PRODUCT (product_id) ON DELETE CASCADE ON
UPDATE CASCADE
);


CREATE TABLE flower.orderr (
orderr_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
user_id INT UNSIGNED NOT NULL,
product_id INT UNSIGNED NOT NULL,
address VARCHAR(255) NOT NULL,
PRIMARY KEY (orderr_id),
CONSTRAINT orderr_user FOREIGN KEY (user_id)
REFERENCES flower.USER(user_id) ON DELETE CASCADE ON 
UPDATE CASCADE, 
CONSTRAINT orderr_product FOREIGN KEY (product_id) 
REFERENCES flower.PRODUCT (product_id) ON DELETE CASCADE ON
UPDATE CASCADE
);
